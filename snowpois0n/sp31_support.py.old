#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.1
#  in conjunction with Tcl version 8.6
#    Apr 06, 2022 11:56:11 PM -03  platform: Windows NT

import os
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import sp31

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = sp31.Toplevel1(_top1)
    root.mainloop()

def install_dolphin(*args):
    if os.name == "nt":
        os.system("adb install snowpois0n\\apk\\android_4.2\\mobi.mgeek.DolphinBrowser_12.0.20-827.com.apk")
    else:
        os.system("adb install snowpois0n/apk/android_4.2/mobi.mgeek.DolphinBrowser_12.0.20-827.com.apk")

    #print('sp31_support.install_dolphin')
    sys.stdout.flush()

def jailbreak_newer(*args):
    if os.name == "nt":
        os.system("adb install snowpois0n\\apk\\android_4.4\\F-Droid.apk")
        os.system("adb install snowpois0n\\apk\\android_4.4\\acmarket_4.8.7_27.apk")
    else:
        os.system("adb install snowpois0n/apk/android_4.4/F-Droid.apk")
        os.system("adb install snowpois0n/apk/android_4.4/acmarket_4.8.7_27.apk")


    #print('sp31_support.jailbreak_newer')
    sys.stdout.flush()

def jailbreak_older(*args):
    if os.name == "nt":
        os.system("adb install snowpois0n\\apk\\android_4.2\\org.fdroid.fdroid_1.6.2-1006052_minAPI14.com.apk")
    else:
        os.system("adb install snowpois0n/apk/android_4.2/org.fdroid.fdroid_1.6.2-1006052_minAPI14.com.apk")


    #print('sp31_support.jailbreak_older')
    sys.stdout.flush()

def reboot_device(*args):
    os.system("adb reboot")
    sys.stdout.flush()


def reboot_recovery(*args):
    os.system("adb reboot recovery")
    sys.stdout.flush()

if __name__ == '__main__':
    sp31.start_up()




